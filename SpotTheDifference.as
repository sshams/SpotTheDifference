package {	import flash.display.Sprite;	import flash.display.StageDisplayState;	import flash.display.StageScaleMode;		import view.components.Clock;	import view.components.Difference;	import view.components.Final;	import view.components.Instructions;	import view.components.Intro;	import view.components.Lose;	import view.components.Pack;	import view.components.Win;
		public class SpotTheDifference extends Sprite {				public var intro:Intro;		public var pack:Pack;		public var instructions:Instructions;		public var difference:Difference;		public var clock:Clock;		public var win:Win;		public var lose:Lose;		public var final:Final;				public function SpotTheDifference() {			intro = new Intro();			pack = new Pack();			instructions = new Instructions();			difference = new Difference();			clock = new Clock();			win = new Win();			lose = new Lose();			final = new Final();						ApplicationFacade.getInstance().start(this);			addIntro();						stage.scaleMode = StageScaleMode.NO_SCALE;			stage.displayState = StageDisplayState.FULL_SCREEN;		}				public function addIntro():void {			addChild(intro);			intro.animateIn();		}				public function removeIntro():void {			removeChild(intro);			intro.reset();		}				public function addPack():void {			addChild(pack);			pack.animateIn();		}				public function removePack():void {			removeChild(pack);			pack.reset();		}				public function addInstructions():void {			addChild(instructions);			instructions.animateIn();		}				public function removeInstructions():void {			removeChild(instructions);			instructions.reset();		}				public function addDifference():void {			addChild(difference);			difference.animateIn();		}				public function removeDifference():void {			removeChild(difference);			difference.reset();		}				public function addClock():void {			addChild(clock);			clock.animateIn();		}				public function removeClock():void {			if(clock.parent){				removeChild(clock);			}			clock.reset();		}				public function addWin():void {			addChild(win);			win.animateIn();		}				public function removeWin():void {			if(win.parent){				removeChild(win);			}			win.reset();		}				public function addLose():void {			addChild(lose);			lose.animateIn();		}				public function removeLose():void {			if(lose.parent){				removeChild(lose);			}			lose.reset();		}				public function addFinal():void {			addChild(final);			final.animateIn();		}				public function removeFinal():void {			removeChild(final);			final.reset();		}			}}